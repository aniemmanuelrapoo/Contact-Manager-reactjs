{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","withRouter","NotFound","Test","title","completed","fetch","then","response","json","EditContact","updContact","match","params","put","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9e529f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = ({ branding }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({contacts: res.data})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n         dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    };\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} className='fas fa-sort-down' style={{cursor: 'pointer'}}></i>\r\n                            <i className='fas fa-times' style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                            <Link to={`contact/edit/${id}`}><i className='fas fa-pencil-alt' style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}></i></Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className='list-group'>\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : (null)}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Contact from './Contact'\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value\r\n                    return(\r\n                        <>\r\n                        <h1 className=\"display-4 mb-2\"><span className='text-danger'>Contact</span> List</h1>\r\n                            {\r\n                                contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                                ))\r\n                            }\r\n                        </>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>About Contact Manager</h1>\r\n            <p className='lead'>Simple app to Manage contacts</p>\r\n            <p className=\"text-secoundary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input \r\n            type={type} \r\n            name={name} \r\n            className={classnames(\"form-control form-control-lg\", {'is-invalid': error})} \r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n)\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check For Errors\r\n        if(name === ''){\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n        //clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n        \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className='card mb-3'>\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter Email...\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"'Enter Phone...\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n\r\n                                <input type=\"submit\" value=\"Add Contact\" className='btn btn-block btn-light' />\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AddContact);\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'><span className='text-danger'>404</span> Page Not Found</h1>\r\n            <p className='lead'>Sorry, that page dose not exit</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        completed: \"\",\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            completed: data.completed\r\n        }))\r\n    }\r\n\r\n    // componentWillMount(){\r\n    //     console.log('componentWillMount!...')\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('componentDidUpdate!...')\r\n    // }\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('componentWillReceiveProps!...')\r\n    // }\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return {\r\n    //         test: 'something'\r\n    //     }\r\n    // }\r\n    \r\n    // getSnapshotBeforeUpdate(nextProps, nextState){\r\n    //     console.log('getSnapshotBeforeUpdate!...')\r\n    // }\r\n\r\n    render() {\r\n        const { title, completed } = this.state\r\n        return (\r\n            <div>\r\n                <h1>{`The Topic titled ${title} is a ${completed} Topic`}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check For Errors\r\n        if(name === ''){\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload:res.data })\r\n\r\n        //clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n        \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className='card mb-3'>\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter Email...\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"'Enter Phone...\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n\r\n                                <input type=\"submit\" value=\"Update Contact\" className='btn btn-block btn-light' />\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(EditContact);\r\n","import React, { Component } from 'react';\nimport './App.css'\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './context';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom'\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider>\n          <div className='App'>\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\"><Contacts /></Route>\n            <Route exact path=\"/contact/add\"><AddContact /></Route>\n            <Route exact path=\"/about\"><About /></Route>\n            <Route exact path=\"/test\"><Test /></Route>\n            <Route exact path=\"/contact/edit/:id\"><EditContact /></Route>\n            <Route><NotFound /></Route>\n          </Switch>\n          </div>\n          </div>\n      </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}